// src/api/reviewService.js
import apiClient from './ApiClient';

const BASE_URL = '/reviews';

const reviewService = {
  // Obtener todas las rese√±as
  getAll: async (params = {}) => {
    try {
      const {
        page = 1,
        limit = 20,
        status,
        search,
        sort = 'newest',
        rating
      } = params;

      console.log('üîç [ReviewService-Mobile] Obteniendo rese√±as con params:', params);

      const queryParams = new URLSearchParams();
      queryParams.append('page', page.toString());
      queryParams.append('limit', limit.toString());
      
      if (status && status.trim() !== '') queryParams.append('status', status);
      if (search && search.trim() !== '') queryParams.append('search', search.trim());
      if (sort) queryParams.append('sort', sort);
      if (rating) queryParams.append('rating', rating);

      const url = `${BASE_URL}?${queryParams.toString()}`;
      console.log('üì° [ReviewService-Mobile] URL:', url);

      const response = await apiClient.get(url);
      console.log('‚úÖ [ReviewService-Mobile] Rese√±as obtenidas:', response);
      return response;
    } catch (error) {
      console.error('‚ùå [ReviewService-Mobile] Error obteniendo rese√±as:', error);
      throw error;
    }
  },

  // Obtener rese√±a por ID
  getById: async (reviewId) => {
    try {
      console.log(`üîç [ReviewService-Mobile] Obteniendo rese√±a ${reviewId}`);
      
      const response = await apiClient.get(`${BASE_URL}/${reviewId}`);
      console.log('‚úÖ [ReviewService-Mobile] Rese√±a obtenida:', response);
      return response;
    } catch (error) {
      console.error('‚ùå [ReviewService-Mobile] Error obteniendo rese√±a:', error);
      throw error;
    }
  },

  // Aprobar rese√±a
  approve: async (reviewId) => {
    try {
      console.log(`‚úÖ [ReviewService-Mobile] Aprobando rese√±a ${reviewId}`);
      
      const response = await apiClient.patch(`${BASE_URL}/${reviewId}/approve`, {}, {
        headers: {
          'Content-Type': 'application/json',
        },
        timeout: 30000, // 30 segundos
      });
      
      console.log('‚úÖ [ReviewService-Mobile] Rese√±a aprobada:', response);
      return response;
    } catch (error) {
      console.error('‚ùå [ReviewService-Mobile] Error aprobando rese√±a:', error);
      throw error;
    }
  },

  // Rechazar rese√±a
  reject: async (reviewId, reason = '') => {
    try {
      console.log(`‚ùå [ReviewService-Mobile] Rechazando rese√±a ${reviewId}, raz√≥n: ${reason}`);
      
      const response = await apiClient.patch(`${BASE_URL}/${reviewId}/reject`, {
        reason: reason
      }, {
        headers: {
          'Content-Type': 'application/json',
        },
        timeout: 30000, // 30 segundos
      });
      
      console.log('‚úÖ [ReviewService-Mobile] Rese√±a rechazada:', response);
      return response;
    } catch (error) {
      console.error('‚ùå [ReviewService-Mobile] Error rechazando rese√±a:', error);
      throw error;
    }
  },

  // Eliminar rese√±a
  delete: async (reviewId) => {
    try {
      console.log(`üóëÔ∏è [ReviewService-Mobile] Eliminando rese√±a ${reviewId}`);
      
      const response = await apiClient.delete(`${BASE_URL}/${reviewId}`, {
        timeout: 30000, // 30 segundos
      });
      
      console.log('‚úÖ [ReviewService-Mobile] Rese√±a eliminada:', response);
      return response;
    } catch (error) {
      console.error('‚ùå [ReviewService-Mobile] Error eliminando rese√±a:', error);
      throw error;
    }
  },

  // Obtener estad√≠sticas de rese√±as
  getStats: async () => {
    try {
      console.log('üìä [ReviewService-Mobile] Obteniendo estad√≠sticas de rese√±as');
      
      const response = await apiClient.get(`${BASE_URL}/stats`);
      console.log('‚úÖ [ReviewService-Mobile] Estad√≠sticas obtenidas:', response);
      return response;
    } catch (error) {
      console.error('‚ùå [ReviewService-Mobile] Error obteniendo estad√≠sticas:', error);
      throw error;
    }
  },

  // Responder a rese√±a
  respond: async (reviewId, responseText) => {
    try {
      console.log(`üí¨ [ReviewService-Mobile] Respondiendo a rese√±a ${reviewId}`);
      
      const response = await apiClient.post(`${BASE_URL}/${reviewId}/respond`, {
        response: responseText
      }, {
        headers: {
          'Content-Type': 'application/json',
        },
        timeout: 30000, // 30 segundos
      });
      
      console.log('‚úÖ [ReviewService-Mobile] Respuesta enviada:', response);
      return response;
    } catch (error) {
      console.error('‚ùå [ReviewService-Mobile] Error respondiendo a rese√±a:', error);
      throw error;
    }
  },

  // Marcar como destacada
  feature: async (reviewId, featured = true) => {
    try {
      console.log(`‚≠ê [ReviewService-Mobile] ${featured ? 'Destacando' : 'Quitando destacado'} rese√±a ${reviewId}`);
      
      const response = await apiClient.patch(`${BASE_URL}/${reviewId}/feature`, {
        featured: featured
      }, {
        headers: {
          'Content-Type': 'application/json',
        },
        timeout: 30000, // 30 segundos
      });
      
      console.log('‚úÖ [ReviewService-Mobile] Rese√±a actualizada:', response);
      return response;
    } catch (error) {
      console.error('‚ùå [ReviewService-Mobile] Error actualizando rese√±a:', error);
      throw error;
    }
  }
};

export default reviewService;
